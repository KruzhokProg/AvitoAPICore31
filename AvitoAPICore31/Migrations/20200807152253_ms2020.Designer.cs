// <auto-generated />
using System;
using AvitoAPICore31;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvitoAPICore31.Migrations
{
    [DbContext(typeof(AvitoContext))]
    [Migration("20200807152253_ms2020")]
    partial class ms2020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvitoAPICore31.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnName("active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnName("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("Communication")
                        .IsRequired()
                        .HasColumnName("communication")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ConditionId")
                        .HasColumnName("conditionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPublication")
                        .HasColumnName("dateOfPublication")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<double>("Price")
                        .HasColumnName("price")
                        .HasColumnType("float");

                    b.Property<int>("TypeId")
                        .HasColumnName("typeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Ad");
                });

            modelBuilder.Entity("AvitoAPICore31.AdPhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdId")
                        .HasColumnName("adId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnName("photo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.ToTable("adPhotos");
                });

            modelBuilder.Entity("AvitoAPICore31.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AvitoAPICore31.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdId")
                        .HasColumnName("adId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Rating")
                        .HasColumnName("rating")
                        .HasColumnType("int");

                    b.Property<int>("UserIdReceiver")
                        .HasColumnName("userIdReceiver")
                        .HasColumnType("int");

                    b.Property<int>("UserIdSender")
                        .HasColumnName("userIdSender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.HasIndex("UserIdReceiver");

                    b.HasIndex("UserIdSender");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("AvitoAPICore31.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("AvitoAPICore31.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnName("balance")
                        .HasColumnType("float");

                    b.Property<string>("BankLogo")
                        .IsRequired()
                        .HasColumnName("bankLogo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnName("bankName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CardNumber")
                        .HasColumnName("cardNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("AvitoAPICore31.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AvitoAPICore31.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("AvitoAPICore31.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnName("adress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<double?>("Balance")
                        .HasColumnName("balance")
                        .HasColumnType("float");

                    b.Property<string>("CompanyName")
                        .HasColumnName("companyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .HasColumnName("photo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<double?>("Rating")
                        .HasColumnName("rating")
                        .HasColumnType("float");

                    b.Property<int>("RoleId")
                        .HasColumnName("roleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AvitoAPICore31.WatchHistory", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("int");

                    b.Property<int>("AdId")
                        .HasColumnName("adId")
                        .HasColumnType("int");

                    b.Property<bool>("Liked")
                        .HasColumnName("liked")
                        .HasColumnType("bit");

                    b.Property<bool>("Seen")
                        .HasColumnName("seen")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "AdId");

                    b.HasIndex("AdId");

                    b.ToTable("WatchHistory");
                });

            modelBuilder.Entity("AvitoAPICore31.Ad", b =>
                {
                    b.HasOne("AvitoAPICore31.Category", "Category")
                        .WithMany("Ad")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Ad_Category")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.Condition", "Condition")
                        .WithMany("Ad")
                        .HasForeignKey("ConditionId")
                        .HasConstraintName("FK_Ad_Condition")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.Type", "Type")
                        .WithMany("Ad")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Ad_Type")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.User", "User")
                        .WithMany("Ad")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ad_User")
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoAPICore31.AdPhotos", b =>
                {
                    b.HasOne("AvitoAPICore31.Ad", "Ad")
                        .WithMany("AdPhotos")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK_adPhotos_Ad")
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoAPICore31.Comment", b =>
                {
                    b.HasOne("AvitoAPICore31.Ad", "Ad")
                        .WithMany("Comment")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK_Comment_Ad")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.User", "UserIdReceiverNavigation")
                        .WithMany("CommentUserIdReceiverNavigation")
                        .HasForeignKey("UserIdReceiver")
                        .HasConstraintName("FK_Comment_User")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.User", "UserIdSenderNavigation")
                        .WithMany("CommentUserIdSenderNavigation")
                        .HasForeignKey("UserIdSender")
                        .HasConstraintName("FK_Comment_User1")
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoAPICore31.CreditCard", b =>
                {
                    b.HasOne("AvitoAPICore31.User", "User")
                        .WithMany("CreditCard")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CreditCard_User")
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoAPICore31.User", b =>
                {
                    b.HasOne("AvitoAPICore31.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoAPICore31.WatchHistory", b =>
                {
                    b.HasOne("AvitoAPICore31.Ad", "Ad")
                        .WithMany("WatchHistory")
                        .HasForeignKey("AdId")
                        .HasConstraintName("FK_WatchHistory_Ad")
                        .IsRequired();

                    b.HasOne("AvitoAPICore31.User", "User")
                        .WithMany("WatchHistory")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_WatchHistory_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
